{"version":3,"sources":["view/LoginPage.js"],"names":["LoginPage","dispatch","useDispatch","isAuth","useSelector","getIsAuth","navigate","useNavigate","useForm","register","handleSubmit","errors","formState","resetField","resetInputField","to","replace","onSubmit","data","console","log","loginThunk","autoComplete","htmlFor","email","type","id","required","pattern","password","onClick"],"mappings":"2OAmGeA,UAhFf,WAAsB,IAAD,IACbC,EAAWC,cACXC,EAASC,YAAYC,KACvBC,EAAWC,cAMf,EAKIC,cAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,WAUIC,EAAkB,WACtBD,EAAW,SACXA,EAAW,aAGb,OACE,mCACGV,EACC,cAAC,IAAD,UACE,cAAC,IAAD,CAAUY,GAAG,YAAYC,SAAS,MAGpC,eAAC,IAAD,WACE,cAAC,IAAD,qBACA,uBAAMC,SAAUP,GArBF,SAACQ,GACrBC,QAAQC,IAAIF,GACZjB,EAASoB,YAAWH,IAEpBJ,OAiBmDQ,aAAa,MAA1D,UACE,eAAC,IAAD,CAAOC,QAAQ,aAAf,2BAE0B,cAAvB,UAAAZ,EAAOa,aAAP,eAAcC,OACb,cAAC,IAAD,6BAEF,cAAC,IAAD,aACEA,KAAK,OACLC,GAAG,cACCjB,EAAS,QAAS,CACpBkB,UAAU,EACVC,QAAS,oBAKf,eAAC,IAAD,CAAOL,QAAQ,WAAf,sBAE6B,cAA1B,UAAAZ,EAAOkB,gBAAP,eAAiBJ,OAChB,cAAC,IAAD,6BAEF,cAAC,IAAD,aACEA,KAAK,WACLC,GAAG,YACCjB,EAAS,WAAY,CACvBkB,UAAU,EACVC,QAAS,oBAKf,uBACA,cAAC,IAAD,CAAQH,KAAK,SAAb,uBAEF,eAAC,IAAD,CAAqBA,KAAK,SAASK,QAlEhB,WACzBxB,EAAS,cAiEH,iCACsB,cAAC,IAAD","file":"static/js/Login page.6dcf5ca4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useNavigate, Navigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsAuth } from \"../redux/auth/auth-selector\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { loginThunk } from \"../redux/auth/auth-thunks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { MdOutlineAppRegistration } from \"react-icons/md\";\r\n\r\nimport {\r\n  Wrapper,\r\n  Title,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  LabelMessage,\r\n  CreateAccountButton,\r\n} from \"../App.styled\";\r\n\r\nfunction LoginPage() {\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector(getIsAuth);\r\n  let navigate = useNavigate();\r\n\r\n  const onClickRegisterBtn = () => {\r\n    navigate(`/register`);\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    resetField,\r\n  } = useForm();\r\n\r\n  const onLoginSubmit = (data) => {\r\n    console.log(data);\r\n    dispatch(loginThunk(data));\r\n\r\n    resetInputField();\r\n  };\r\n\r\n  const resetInputField = () => {\r\n    resetField(\"email\");\r\n    resetField(\"password\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAuth ? (\r\n        <Wrapper>\r\n          <Navigate to=\"/contacts\" replace={true} />\r\n        </Wrapper>\r\n      ) : (\r\n        <Wrapper>\r\n          <Title>Log in</Title>\r\n          <form onSubmit={handleSubmit(onLoginSubmit)} autoComplete=\"off\">\r\n            <Label htmlFor=\"emailInput\">\r\n              email address:\r\n              {errors.email?.type === \"required\" && (\r\n                <LabelMessage> is required *</LabelMessage>\r\n              )}\r\n              <Input\r\n                type=\"text\"\r\n                id=\"emailInput\"\r\n                {...register(\"email\", {\r\n                  required: true,\r\n                  pattern: \"/^S+@S+$/i\",\r\n                })}\r\n              />\r\n            </Label>\r\n\r\n            <Label htmlFor=\"password\">\r\n              password:\r\n              {errors.password?.type === \"required\" && (\r\n                <LabelMessage> is required *</LabelMessage>\r\n              )}\r\n              <Input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                {...register(\"password\", {\r\n                  required: true,\r\n                  pattern: \"/^S+@S+$/i\",\r\n                })}\r\n              />\r\n            </Label>\r\n\r\n            <br />\r\n            <Button type=\"submit\">Log in</Button>\r\n          </form>\r\n          <CreateAccountButton type=\"button\" onClick={onClickRegisterBtn}>\r\n            Create your Account <MdOutlineAppRegistration />\r\n          </CreateAccountButton>\r\n        </Wrapper>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"sourceRoot":""}