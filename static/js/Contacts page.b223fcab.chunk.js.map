{"version":3,"sources":["components/Filter/Filter.module.css","components/Modal/Modal.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Notification/Notification.js","components/ContactList/contactItem.jsx","redux/contacts-selector.js","components/Loader-spinner/Loader-spinner.jsx","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Modal/Modal.jsx","view/ContactsPage.js","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","ContactForm","useCreateItemMutation","createItem","isLoading","contacts","useGetItemsQuery","data","useForm","register","handleSubmit","errors","formState","resetField","resetInputField","formWrapper","onSubmit","name","number","normalizedName","toLowerCase","theFirstCondition","find","contact","theSecondCondition","toast","error","form","htmlFor","label","type","errorMessage","input","id","required","maxLength","pattern","title","btnSubmit","Notification","message","defaultProps","propType","PropTypes","string","isRequired","ContactItem","toggleModal","useDeleteItemMutation","deleteItem","isDeleting","list_item","href","link_to_call","onClick","btnItem","filterValue","state","filter","LoaderSpinner","color","height","width","timeout","ContactList","items","isError","contactItems","filterString","normFilter","includes","getVisibleItems","useSelector","length","contacts_list","map","Filter","dispatch","useDispatch","filter_overlay","filter_label","value","onChange","target","changeFilter","trim","filter_input","modalRoot","document","querySelector","Modal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Overlay","currentTarget","ContactsPage","useState","showModal","setShowModal","theme","autoClose"],"mappings":"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","file":"static/js/Contacts page.b223fcab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_overlay\":\"Filter_filter_overlay__3BmlP\",\"filter_label\":\"Filter_filter_label__xSNsv\",\"filter_input\":\"Filter_filter_input__22sYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2_HQ8\",\"Modal\":\"Modal_Modal__3pEoi\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useCreateItemMutation, useGetItemsQuery } from \"../../redux/itemsRTK\";\r\n\r\nfunction ContactForm() {\r\n  const [createItem, { isLoading }] = useCreateItemMutation();\r\n  const { data: contacts } = useGetItemsQuery();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    resetField,\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const { name, number } = data;\r\n    const normalizedName = name.toLowerCase();\r\n    const theFirstCondition = contacts.find(\r\n      (contact) => contact.name.toLowerCase() === normalizedName\r\n    );\r\n    const theSecondCondition = contacts.find(\r\n      (contact) => contact.number === number\r\n    );\r\n\r\n    if (theFirstCondition) {\r\n      return toast.error(`${name} is already in contacts list`);\r\n    } else if (theSecondCondition) {\r\n      return toast.error(`${number} is already in contacts list`);\r\n    } else {\r\n      createItem(data);\r\n    }\r\n    resetInputField();\r\n  };\r\n\r\n  const resetInputField = () => {\r\n    resetField(\"name\");\r\n    resetField(\"number\");\r\n  };\r\n\r\n  return (\r\n    <div className={s.formWrapper}>\r\n      <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\r\n        <label htmlFor=\"nameInput\" className={s.label}>\r\n          Name:\r\n          {errors.name?.type === \"required\" && (\r\n            <span className={s.errorMessage}> is required*</span>\r\n          )}\r\n          <input\r\n            type=\"text\"\r\n            className={s.input}\r\n            id=\"nameInput\"\r\n            {...register(\"name\", {\r\n              required: true,\r\n              maxLength: 80,\r\n              pattern:\r\n                \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n              title:\r\n                \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n            })}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"telInput\" className={s.label}>\r\n          Number:\r\n          {errors.number?.type === \"required\" && (\r\n            <span className={s.errorMessage}> is required *</span>\r\n          )}\r\n          <input\r\n            type=\"tel\"\r\n            className={s.input}\r\n            id=\"telInput\"\r\n            {...register(\"number\", {\r\n              required: true,\r\n              maxLength: 12,\r\n              pattern:\r\n                \"/+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}/i\",\r\n            })}\r\n          />\r\n        </label>\r\n\r\n        <br />\r\n        <button type=\"submit\" className={s.btnSubmit}>\r\n          {isLoading ? \"Adding...\" : \"Add contact\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NotifyMessage } from \"../../App.styled\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <NotifyMessage>{message}</NotifyMessage>;\r\n}\r\n\r\nNotification.defaultProps = {\r\n  message: \"No contacts \",\r\n};\r\n\r\nNotification.propType = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\nimport {\r\n  MdCall,\r\n  MdOutlineDeleteOutline,\r\n  MdModeEditOutline,\r\n} from \"react-icons/md\";\r\nimport { useDeleteItemMutation } from \"../../redux/itemsRTK\";\r\n\r\nexport default function ContactItem({ id, name, number, toggleModal }) {\r\n  const [deleteItem, { isLoading: isDeleting }] = useDeleteItemMutation();\r\n\r\n  return (\r\n    <li key={id} className={s.list_item}>\r\n      <p>{name}</p>\r\n      <a href=\"tel:{number}\" className={s.link_to_call}>\r\n        <MdCall />\r\n        {number}\r\n      </a>\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => deleteItem(id)}\r\n          className={s.btnItem}\r\n        >\r\n          {isDeleting ? \"...\" : <MdOutlineDeleteOutline />}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => toggleModal()}\r\n          className={s.btnItem}\r\n        >\r\n          <MdModeEditOutline />\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propType = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","export const filterValue = (state) => state.contacts.filter;\r\n\r\n//for ContactList\r\nexport const getVisibleItems = (data, filterString) => {\r\n  let normFilter = filterString.toLowerCase();\r\n  if (data) {\r\n    return data.filter(({ name }) => name.toLowerCase().includes(normFilter));\r\n  }\r\n  return data;\r\n};\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function LoaderSpinner() {\r\n  return (\r\n    <>\r\n      <Loader\r\n        type=\"Bars\"\r\n        color=\"#00BFFF\"\r\n        height={50}\r\n        width={50}\r\n        timeout={3000} //3 secs\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport ContactItem from \"./contactItem\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { filterValue, getVisibleItems } from \"../../redux/contacts-selector\";\r\nimport { useGetItemsQuery } from \"../../redux/itemsRTK\";\r\nimport LoaderSpinner from \"../Loader-spinner/Loader-spinner\";\r\n\r\nexport default function ContactList({ toggleModal }) {\r\n  const { data: items, isError, isLoading } = useGetItemsQuery();\r\n  const filter = useSelector(filterValue);\r\n  const contactItems = getVisibleItems(items, filter);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoaderSpinner />}\r\n      {isError && <p>...:(...</p>}\r\n      {contactItems && contactItems.length === 0 && <Notification />}\r\n\r\n      {contactItems ? (\r\n        <ul className={s.contacts_list}>\r\n          {contactItems.map(({ id, name, number }) => (\r\n            <ContactItem\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              toggleModal={toggleModal}\r\n            />\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport { changeFilter } from \"../../redux/actions-contacts\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterValue } from \"../../redux/contacts-selector\";\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(filterValue);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={s.filter_overlay}>\r\n      <label className={s.filter_label}>\r\n        Find contacts by name:\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={({ target }) => dispatch(changeFilter(target.value.trim()))}\r\n          className={s.filter_input}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { createPortal } from \"react-dom\";\r\nimport s from \"./Modal.module.css\";\r\n// import { ReactComponent as Close } from \"../../Icons/Close.svg\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport function Modal({ toggleModal }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  });\r\n\r\n  // Escape keydown///\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  const handleClose = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  // const handleCloseButton = () => {\r\n  //   toggleModal();\r\n  // };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleClose}>\r\n      <div className={s.Modal}>\r\n        <form>\r\n          <input type=\"text\" />\r\n          <input type=\"tel\" />\r\n          <button type=\"submit\">confirm</button>\r\n        </form>\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\n// Modal.propTypes = {\r\n//   children: PropTypes.node,\r\n// };\r\n","import React, { useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Container from \"../components/Container/Container\";\r\n// import HeroTitle from \"../components/Title/Title\";\r\n// import SectionTitle from \"../components/Title/SectionTitle/SectionTitle\";\r\nimport ContactForm from \"../components/ContactForm/ContactForm\";\r\nimport ContactList from \"../components/ContactList/ContactList\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport { Modal } from \"../components/Modal/Modal\";\r\n\r\nfunction ContactsPage() {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div>\r\n          {/* <HeroTitle title=\"Phonebook\" /> */}\r\n          <ContactForm />\r\n        </div>\r\n        <div>\r\n          {/* <SectionTitle sectionTitle=\"Contacts\" /> */}\r\n          <Filter />\r\n          <ContactList toggleModal={toggleModal} />\r\n        </div>\r\n        {showModal && <Modal toggleModal={toggleModal} />}\r\n      </Container>\r\n      <ToastContainer theme=\"dark\" autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactsPage;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_list\":\"ContactList_contacts_list__1MM9d\",\"list_item\":\"ContactList_list_item__2RPta\",\"link_to_call\":\"ContactList_link_to_call__DJQzu\",\"btnItem\":\"ContactList_btnItem__3UBZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2yWFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"ContactForm_formWrapper__3F-Su\",\"form\":\"ContactForm_form__3VQQW\",\"input\":\"ContactForm_input__1xg26\",\"label\":\"ContactForm_label__o-CIO\",\"btnSubmit\":\"ContactForm_btnSubmit__3gvEd\",\"errorMessage\":\"ContactForm_errorMessage__1hOyd\"};"],"sourceRoot":""}