{"version":3,"sources":["view/RegisterPage.js"],"names":["RegisterPage","dispatch","useDispatch","useForm","register","handleSubmit","errors","formState","resetField","resetInputField","onSubmit","data","registerThunk","htmlFor","name","type","id","required","maxLength","pattern","number"],"mappings":"8MAqFeA,UA9Ef,WAAyB,IAAD,MAChBC,EAAWC,cACjB,EAKIC,cAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,WAQIC,EAAkB,WACtBD,EAAW,QACXA,EAAW,YACXA,EAAW,UAGb,OACE,mCACE,8BACE,uBAAME,SAAUL,GAdG,SAACM,GACxBV,EAASW,YAAcD,IACvBF,OAYI,UACE,wBAAOI,QAAQ,YAAf,kBAEyB,cAAtB,UAAAP,EAAOQ,YAAP,eAAaC,OAAuB,iDACrC,mCACEA,KAAK,OACLC,GAAG,aACCZ,EAAS,OAAQ,CACnBa,UAAU,EACVC,UAAW,GACXC,QACE,gIAKR,wBAAON,QAAQ,aAAf,2BAE2B,cAAxB,UAAAP,EAAOc,cAAP,eAAeL,OAAuB,kDACvC,mCACEA,KAAK,OAELC,GAAG,cACCZ,EAAS,QAAS,CACpBa,UAAU,EACVE,QAAS,oBAKf,wBAAON,QAAQ,WAAf,sBAE2B,cAAxB,UAAAP,EAAOc,cAAP,eAAeL,OAAuB,kDACvC,mCACEA,KAAK,WAELC,GAAG,YACCZ,EAAS,WAAY,CACvBa,UAAU,EACVE,QAAS,oBAKf,uBACA,wBAAQJ,KAAK,SAAb","file":"static/js/Register page.f9b09d27.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { registerThunk } from \"../redux/auth/auth-thunks\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction RegisterPage() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    resetField,\r\n  } = useForm();\r\n\r\n  const onRegisterSubmit = (data) => {\r\n    dispatch(registerThunk(data));\r\n    resetInputField();\r\n  };\r\n\r\n  const resetInputField = () => {\r\n    resetField(\"name\");\r\n    resetField(\"password\");\r\n    resetField(\"email\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <form onSubmit={handleSubmit(onRegisterSubmit)}>\r\n          <label htmlFor=\"nameInput\">\r\n            name:\r\n            {errors.name?.type === \"required\" && <span> is required*</span>}\r\n            <input\r\n              type=\"text\"\r\n              id=\"nameInput\"\r\n              {...register(\"name\", {\r\n                required: true,\r\n                maxLength: 80,\r\n                pattern:\r\n                  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n              })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"emailInput\">\r\n            email address:\r\n            {errors.number?.type === \"required\" && <span> is required *</span>}\r\n            <input\r\n              type=\"text\"\r\n              // className={s.input}\r\n              id=\"emailInput\"\r\n              {...register(\"email\", {\r\n                required: true,\r\n                pattern: \"/^S+@S+$/i\",\r\n              })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"password\">\r\n            password:\r\n            {errors.number?.type === \"required\" && <span> is required *</span>}\r\n            <input\r\n              type=\"password\"\r\n              // className={s.input}\r\n              id=\"password\"\r\n              {...register(\"password\", {\r\n                required: true,\r\n                pattern: \"/^S+@S+$/i\",\r\n              })}\r\n            />\r\n          </label>\r\n\r\n          <br />\r\n          <button type=\"submit\">\r\n            {/* {isLoading ? \"Adding...\" : \"Add contact\"} */}\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n"],"sourceRoot":""}