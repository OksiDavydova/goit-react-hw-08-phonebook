{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Title/Title.module.css","components/Title/SectionTitle/SectionTitle.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/Title/Title.jsx","components/Title/SectionTitle/SectionTitle.jsx","redux/itemsRTK.js","components/ContactForm/ContactForm.js","components/Notification/Notification.js","components/ContactList/contactItem.jsx","redux/contacts-selector.js","components/Loader-spinner/Loader-spinner.jsx","components/ContactList/ContactList.js","redux/actions-contacts.js","components/Filter/Filter.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","HeroTitle","title","hero_title","defaultProps","SectionTitle","sectionTitle","section_title","itemsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getItems","query","providesTags","createItem","mutation","newItem","url","method","body","name","number","invalidatesTags","deleteItem","id","useGetItemsQuery","useCreateItemMutation","useDeleteItemMutation","ContactForm","isLoading","contacts","data","useForm","register","handleSubmit","errors","formState","resetField","resetInputField","formWrapper","onSubmit","normalizedName","toLowerCase","theFirstCondition","find","contact","theSecondCondition","toast","error","form","htmlFor","label","type","errorMessage","input","required","maxLength","pattern","btnSubmit","Notification","message","message_notification","propType","PropTypes","string","isRequired","ContactItem","isDeleting","list_item","href","link_to_call","onClick","btnItem","filterValue","state","filter","LoaderSpinner","color","height","width","timeout","ContactList","items","isError","contactItems","filterString","normFilter","includes","getVisibleItems","useSelector","length","contacts_list","map","changeFilter","createAction","Filter","dispatch","useDispatch","filter_overlay","filter_label","value","onChange","target","trim","filter_input","App","theme","autoClose","createReducer","_","payload","combineReducers","store","configureStore","reducer","rootReducer","devTools","process","middleware","getDefaultMiddleware","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af75f464.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"ContactForm_formWrapper__3F-Su\",\"form\":\"ContactForm_form__3VQQW\",\"input\":\"ContactForm_input__1xg26\",\"label\":\"ContactForm_label__o-CIO\",\"btnSubmit\":\"ContactForm_btnSubmit__3gvEd\",\"errorMessage\":\"ContactForm_errorMessage__1hOyd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_list\":\"ContactList_contacts_list__1MM9d\",\"list_item\":\"ContactList_list_item__2RPta\",\"link_to_call\":\"ContactList_link_to_call__DJQzu\",\"btnItem\":\"ContactList_btnItem__3UBZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_overlay\":\"Filter_filter_overlay__3BmlP\",\"filter_label\":\"Filter_filter_label__xSNsv\",\"filter_input\":\"Filter_filter_input__22sYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2yWFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero_title\":\"Title_hero_title__1T3TF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section_title\":\"SectionTitle_section_title__3pcrF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_notification\":\"Notification_message_notification__FFWwz\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Title.module.css\";\r\n\r\nexport default function HeroTitle({ title }) {\r\n  return <h1 className={s.hero_title}>{title}</h1>;\r\n}\r\n\r\nHeroTitle.defaultProps = {\r\n  title: \"Phonebook\",\r\n};\r\n\r\nHeroTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./SectionTitle.module.css\";\r\n\r\nexport default function SectionTitle({ sectionTitle }) {\r\n  return <h2 className={s.section_title}>{sectionTitle}</h2>;\r\n}\r\n\r\nSectionTitle.defaultProps = {\r\n  title: \"Contacts\",\r\n};\r\n\r\nSectionTitle.propTypes = {\r\n  sectionTitle: PropTypes.string,\r\n};\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const itemsApi = createApi({\r\n  reducerPath: \"itemsApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://6195170f74c1bd00176c6b65.mockapi.io/api/v1\",\r\n  }),\r\n  tagTypes: [\"Items\"],\r\n  endpoints: (builder) => ({\r\n    getItems: builder.query({\r\n      query: () => `/items`,\r\n      providesTags: [\"Items\"],\r\n    }),\r\n    createItem: builder.mutation({\r\n      query: (newItem) => ({\r\n        url: `/items`,\r\n        method: \"POST\",\r\n        body: {\r\n          name: newItem.name,\r\n          number: newItem.number,\r\n        },\r\n      }),\r\n      invalidatesTags: [\"Items\"],\r\n    }),\r\n    deleteItem: builder.mutation({\r\n      query: (id) => ({\r\n        url: `/items/${id}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Items\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetItemsQuery,\r\n  useCreateItemMutation,\r\n  useDeleteItemMutation,\r\n} = itemsApi;\r\n\r\n// function providesList(resultsWithIds, tagType) {\r\n//   return resultsWithIds\r\n//     ? [\r\n//         { type: tagType, id: \"LIST\" },\r\n//         ...resultsWithIds.map(({ id }) => ({ type: tagType, id })),\r\n//       ]\r\n//     : [{ type: tagType, id: \"LIST\" }];\r\n// }\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useCreateItemMutation, useGetItemsQuery } from \"../../redux/itemsRTK\";\r\n\r\nfunction ContactForm() {\r\n  const [createItem, { isLoading }] = useCreateItemMutation();\r\n  const { data: contacts } = useGetItemsQuery();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    resetField,\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const { name, number } = data;\r\n    const normalizedName = name.toLowerCase();\r\n    const theFirstCondition = contacts.find(\r\n      (contact) => contact.name.toLowerCase() === normalizedName\r\n    );\r\n    const theSecondCondition = contacts.find(\r\n      (contact) => contact.number === number\r\n    );\r\n\r\n    if (theFirstCondition) {\r\n      return toast.error(`${name} is already in contacts list`);\r\n    } else if (theSecondCondition) {\r\n      return toast.error(`${number} is already in contacts list`);\r\n    } else {\r\n      createItem(data);\r\n    }\r\n    resetInputField();\r\n  };\r\n\r\n  const resetInputField = () => {\r\n    resetField(\"name\");\r\n    resetField(\"number\");\r\n  };\r\n\r\n  return (\r\n    <div className={s.formWrapper}>\r\n      <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\r\n        <label htmlFor=\"nameInput\" className={s.label}>\r\n          Name:\r\n          {errors.name?.type === \"required\" && (\r\n            <span className={s.errorMessage}> is required*</span>\r\n          )}\r\n          <input\r\n            type=\"text\"\r\n            className={s.input}\r\n            id=\"nameInput\"\r\n            {...register(\"name\", {\r\n              required: true,\r\n              maxLength: 80,\r\n              pattern:\r\n                \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n              title:\r\n                \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n            })}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"telInput\" className={s.label}>\r\n          Number:\r\n          {errors.number?.type === \"required\" && (\r\n            <span className={s.errorMessage}> is required *</span>\r\n          )}\r\n          <input\r\n            type=\"tel\"\r\n            className={s.input}\r\n            id=\"telInput\"\r\n            {...register(\"number\", {\r\n              required: true,\r\n              maxLength: 12,\r\n              pattern:\r\n                \"/+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}/i\",\r\n            })}\r\n          />\r\n        </label>\r\n\r\n        <br />\r\n        <button type=\"submit\" className={s.btnSubmit}>\r\n          {isLoading ? \"Adding...\" : \"Add contact\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.message_notification}>{message}</p>;\r\n}\r\n\r\nNotification.defaultProps = {\r\n  message: \"No contacts \",\r\n};\r\n\r\nNotification.propType = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\nimport { MdCall, MdOutlineDeleteOutline } from \"react-icons/md\";\r\nimport { useDeleteItemMutation } from \"../../redux/itemsRTK\";\r\n\r\nexport default function ContactItem({ id, name, number }) {\r\n  const [deleteItem, { isLoading: isDeleting }] = useDeleteItemMutation();\r\n  return (\r\n    <li key={id} className={s.list_item}>\r\n      <p>{name}</p>\r\n      <a href=\"tel:{number}\" className={s.link_to_call}>\r\n        <MdCall />\r\n        {number}\r\n      </a>\r\n\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => deleteItem(id)}\r\n        className={s.btnItem}\r\n      >\r\n        {isDeleting ? \"...\" : <MdOutlineDeleteOutline />}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propType = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","export const filterValue = (state) => state.contacts.filter;\r\n\r\n//for ContactList\r\nexport const getVisibleItems = (data, filterString) => {\r\n  let normFilter = filterString.toLowerCase();\r\n  if (data) {\r\n    return data.filter(({ name }) => name.toLowerCase().includes(normFilter));\r\n  }\r\n  return data;\r\n};\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function LoaderSpinner() {\r\n  return (\r\n    <>\r\n      <Loader\r\n        type=\"Bars\"\r\n        color=\"#00BFFF\"\r\n        height={50}\r\n        width={50}\r\n        timeout={3000} //3 secs\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport ContactItem from \"./contactItem\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { filterValue, getVisibleItems } from \"../../redux/contacts-selector\";\r\nimport { useGetItemsQuery } from \"../../redux/itemsRTK\";\r\nimport LoaderSpinner from \"../Loader-spinner/Loader-spinner\";\r\n\r\nexport default function ContactList() {\r\n  const { data: items, isError, isLoading } = useGetItemsQuery();\r\n  const filter = useSelector(filterValue);\r\n  const contactItems = getVisibleItems(items, filter);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoaderSpinner />}\r\n      {isError && <p>...:(...</p>}\r\n      {contactItems && contactItems.length === 0 && <Notification />}\r\n\r\n      {contactItems ? (\r\n        <ul className={s.contacts_list}>\r\n          {contactItems.map(({ id, name, number }) => (\r\n            <ContactItem key={id} id={id} name={name} number={number} />\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// export const addContact = createAction(\"ADD/contact\");\r\n// export const deleteContact = createAction(\"DELETE/contact\");\r\nexport const changeFilter = createAction(\"FILTER_CHANGE/contact\");\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport { changeFilter } from \"../../redux/actions-contacts\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterValue } from \"../../redux/contacts-selector\";\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(filterValue);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={s.filter_overlay}>\r\n      <label className={s.filter_label}>\r\n        Find contacts by name:\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={({ target }) => dispatch(changeFilter(target.value.trim()))}\r\n          className={s.filter_input}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Filter.propTypes = {\r\n//   filter: PropTypes.string,\r\n//   changeFilter: PropTypes.func,\r\n// };\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     filter: state.filter,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     onChangeFilter: (e) => dispatch(changeFilter(e.target.value.trim())),\r\n//   };\r\n// };\r\n","import \"./App.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n// import { connect } from \"react-redux\";\r\n\r\nimport Container from \"./components/Container/Container\";\r\nimport HeroTitle from \"./components/Title/Title\";\r\nimport SectionTitle from \"./components/Title/SectionTitle/SectionTitle\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <HeroTitle title=\"Phonebook\" />\r\n        <ContactForm />\r\n        <>\r\n          <SectionTitle sectionTitle=\"Contacts\" />\r\n          <Filter />\r\n          <ContactList />\r\n        </>\r\n      </Container>\r\n      <ToastContainer theme=\"dark\" autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// import actionTypes from \"./actions-type\";\r\nimport { changeFilter } from \"./actions-contacts\";\r\nimport { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\nimport rootReducer from \"./contacts-reducer\";\r\nimport { itemsApi } from \"./itemsRTK\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: rootReducer,\r\n    [itemsApi.reducerPath]: itemsApi.reducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    itemsApi.middleware,\r\n  ],\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\"; //, persistor\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\n// console.log(store);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}